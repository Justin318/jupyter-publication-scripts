((*- extends 'article.tplx' -*))

% Author and Title from metadata
% Author must be seperated from parent class due to affiliations
((* block maketitle *))
    ((*- if nb.metadata["latex_metadata"]: -*))
        ((*- if nb.metadata["latex_metadata"]["title"]: -*))
            \title{((( nb.metadata["latex_metadata"]["title"] )))}
        ((*- endif *))
    ((*- else -*))
        \title{((( resources.metadata.name )))}
    ((*- endif *))

    \date{\today}
    \maketitle
((* endblock maketitle *))

% New mechanism for rendering figures with captions
((*- block data_png -*))
    ((*- if cell.metadata.widefigure: -*))
        ((( draw_widefigure_with_caption(output.metadata.filenames['image/png'], cell.metadata.caption, cell.metadata.label) )))
    ((*- else -*))
        ((*- if cell.metadata.caption: -*))
            ((*- if cell.metadata.label: -*))
                ((( draw_figure_with_caption(output.metadata.filenames['image/png'], cell.metadata.caption, cell.metadata.label) )))
            ((*- else -*))
                ((( draw_figure_with_caption(output.metadata.filenames['image/png'], cell.metadata.caption, "") )))
            ((*- endif *))
        ((*- else -*))
            ((( draw_figure_with_caption(output.metadata.filenames['image/png'], "") )))
        ((*- endif *))
    ((*- endif *))
((*- endblock -*))
((*- block data_jpg -*))
    ((*- if cell.metadata.caption: -*))
        ((*- if cell.metadata.label: -*))
            ((( draw_figure_with_caption(output.metadata.filenames['image/jpeg'], cell.metadata.caption, cell.metadata.label) )))
        ((*- else -*))
            ((( draw_figure_with_caption(output.metadata.filenames['image/jpeg'], cell.metadata.caption, "") )))
        ((*- endif *))
    ((*- else -*))
        ((( draw_figure_with_caption(output.metadata.filenames['image/jpeg'], "") )))
    ((*- endif *))
((*- endblock -*))
((*- block data_svg -*))
    ((*- if cell.metadata.caption: -*))
        ((*- if cell.metadata.label: -*))
            ((( draw_figure_with_caption(output.metadata.filenames['image/svg+xml'], cell.metadata.caption, cell.metadata.label) )))
        ((*- else -*))
            ((( draw_figure_with_caption(output.metadata.filenames['image/svg+xml'], cell.metadata.caption, "") )))
        ((*- endif *))
    ((*- else -*))
        ((( draw_figure_with_caption(output.metadata.filenames['image/svg+xml'], "") )))
    ((*- endif *))
((*- endblock -*))
((*- block data_pdf -*))
    ((*- if cell.metadata.widefigure: -*))
        ((( draw_widefigure_with_caption(output.metadata.filenames['application/pdf'], cell.metadata.caption, cell.metadata.label) )))
    ((*- else -*))
        ((*- if cell.metadata.caption: -*))
            ((*- if cell.metadata.label: -*))
                ((( draw_figure_with_caption(output.metadata.filenames['application/pdf'], cell.metadata.caption, cell.metadata.label) )))
            ((*- else -*))
                ((( draw_figure_with_caption(output.metadata.filenames['application/pdf'], cell.metadata.caption, "") )))
            ((*- endif *))
        ((*- else -*))
            ((( draw_figure_with_caption(output.metadata.filenames['application/pdf'], "") )))
        ((*- endif *))
    ((*- endif *))
((*- endblock -*))

% Draw a figure using the graphicx package.
((* macro draw_figure_with_caption(filename, caption, label) -*))
    ((* set filename = filename | posix_path *))
    ((*- block figure scoped -*))
        \begin{figure}
            \begin{center}\adjustimage{max size={0.9\linewidth}{0.4\paperheight}}{((( filename )))}\end{center}
            \caption{((( caption )))}
            \label{((( label )))}
        \end{figure}
    ((*- endblock figure -*))
((*- endmacro *))

% Draw a figure using the graphicx package.
((* macro draw_widefigure_with_caption(filename, caption, label) -*))
    ((* set filename = filename | posix_path *))
    ((*- block figure_wide scoped -*))
        \begin{figure*}
            \begin{center}\adjustimage{max size={0.9\linewidth}{0.4\paperheight}}{((( filename )))}\end{center}
            \caption{((( caption )))}
            \label{((( label )))}
        \end{figure*}
    ((*- endblock figure_wide -*))
((*- endmacro *))

% Create caption for tables in output resulting from PrettyTable class, must be a longtable!!
((* block execute_result scoped *))
    ((*- for type in output.data | filter_data_type -*))
        ((*- if type in ['text/latex']: -*))
            ((*- if cell.metadata.caption: -*))
                ((*- if cell.metadata.label: -*))
                    ((( output.data['text/latex'].replace("\end{longtable}", "\caption{"+cell.metadata.caption+"}" + "\label{"+cell.metadata.label+"}" + "\end{longtable}")  )))
                ((*- else -*))
                    ((( output.data['text/latex'].replace("\end{longtable}", "\caption{"+cell.metadata.caption+"}" + "\end{longtable}")  )))
                ((*- endif -*))
            ((*- else -*))
                (((output.data['text/latex'])))
            ((*- endif -*))
        ((*- else -*))
            ((( super() )))
        ((*- endif -*))
    ((*- endfor -*))
((* endblock execute_result *))

% Disable input cells
((* block input_group *))
((* endblock input_group *))
